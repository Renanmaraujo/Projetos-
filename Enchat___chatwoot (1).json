{
  "name": "Enchat - chatwoot",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "34684996-ec96-41a5-9f7b-a2ced5cd81f2",
              "name": "Kira.assignee",
              "value": "={{ $json.body.conversation.meta.assignee.name }}",
              "type": "string"
            },
            {
              "id": "69c5f114-08a2-43cf-8615-ace67780504b",
              "name": "Kira.agentType",
              "value": "={{ $json.body.conversation.meta.assignee.type }}",
              "type": "string"
            },
            {
              "id": "8d9d1245-53f5-47b2-8aac-70e4bfe9d959",
              "name": "Kira. status",
              "value": "={{ $json.body.conversation.status }}",
              "type": "string"
            },
            {
              "id": "b830dada-5afd-4883-87d0-353d85b43b13",
              "name": "=Kira.labels",
              "value": "={{ $json.body.conversation.labels }}",
              "type": "array"
            },
            {
              "id": "070168db-75c1-4347-bc76-92a1d1688c05",
              "name": "Message.id",
              "value": "={{\n  $json.body.conversation.messages[0].id ||\n  $json.body.data.key?.id\n}}",
              "type": "number"
            },
            {
              "id": "6d725bc5-d302-4109-b04e-176d5f1fb5cf",
              "name": "Message.timestamp",
              "value": "={{ $json.body.conversation.messages[0].created_at.toDateTime('s').toISO() }}",
              "type": "string"
            },
            {
              "id": "a156ada2-a8a5-4074-abe4-499c795db6f1",
              "name": "Message.type",
              "value": "={{ \n  $json.body?.conversation?.messages?.[0]?.attachments?.[0]?.file_type === 'image' ? 'image' :\n  $json.body?.conversation?.messages?.[0]?.attachments?.[0]?.file_type === 'audio' ? 'audio' :\n  $json.body?.conversation?.messages?.[0]?.attachments?.[0]?.file_type === 'file' ? \n ($json.body?.conversation?.messages?.[0]?.attachments?.[0]?.data_url?.split('.').pop() || '') :\n  $json.body?.content_type === 'text' && $json.body?.content ? 'text' :\n\n  $json.body?.data?.message?.extendedTextMessage ? 'text' :\n  $json.body?.data?.message?.conversation ? 'text' :\n  $json.body?.data?.message?.audioMessage ? 'audio' :\n  $json.body?.data?.message?.imageMessage ? 'image' : \n  null \n}}",
              "type": "string"
            },
            {
              "id": "ca7e53e5-713c-45ee-bfc7-d7cd8955f217",
              "name": "Client.channel",
              "value": "={{ $json.body.conversation.channel }}",
              "type": "string"
            },
            {
              "id": "6bc59143-6f9f-4ed3-9528-62d630749e5a",
              "name": "Client.conversationId",
              "value": "={{ $json.body.conversation.messages[0].conversation_id }}",
              "type": "string"
            },
            {
              "id": "180eabfb-ad13-4a40-94d0-8e2279607add",
              "name": "Client.senderName",
              "value": "={{ \n  $json.body?.sender?.name ||\n  $json.body?.data?.pushName || \n  null \n}}",
              "type": "string"
            },
            {
              "id": "c970857a-7070-4588-afdd-a809f7f5228b",
              "name": "Client.senderType",
              "value": "={{ $json.body.conversation.messages[0].sender_type }}",
              "type": "string"
            },
            {
              "id": "ea976e66-8060-4f56-8da5-22dcb51d3582",
              "name": "Message.content",
              "value": "={{    $json.body?.content ||     $json.body?.data?.message?.extendedTextMessage?.text ||    $json.body?.data?.message?.imageMessage?.caption ||    $json.body?.data?.message?.conversation ||    $json?.message?.text ||    $json?.message?.caption ||    null  }}",
              "type": "string"
            },
            {
              "id": "492b133a-49be-4351-98e1-a93d055b72bb",
              "name": "Message.contentUrl",
              "value": "={{    $json.body?.attachments?.[0]?.data_url ||     $json.body?.data?.message?.mediaUrl ||    null  }}",
              "type": "string"
            },
            {
              "id": "00cbdfaa-22d6-414b-92c9-9bbc7a5689f5",
              "name": "Client.senderID",
              "value": "={{ (() => { \n    let number = $json.body.conversation.meta.sender.identifier.split('@')[0] || null;\n\n    // Se o número tiver pelo menos 4 dígitos, insere o \"9\" após o 4º dígito\n    return (number && number.length > 4) ? number.slice(0, 4) + \"9\" + number.slice(4) : number;\n})() }}",
              "type": "string"
            },
            {
              "id": "d8e6fce7-22c4-42fb-92eb-0e77b77b6e6b",
              "name": "Client.sourceId",
              "value": "={{ $json.body.conversation.messages[0].source_id }}",
              "type": "string"
            },
            {
              "id": "e6253a16-4a45-4951-aa63-6c14a41d688c",
              "name": "Client.email",
              "value": "={{ $json.body.sender.email }}",
              "type": "string"
            },
            {
              "id": "8e87b558-7519-4d2b-88cb-2ac3f2fa72b0",
              "name": "Kira.accountID",
              "value": "=1",
              "type": "string"
            },
            {
              "id": "99995eec-36c3-46cb-ade6-3fdab5658347",
              "name": "Kira.kirawootUrl",
              "value": "https://woot.hausenchat.in/",
              "type": "string"
            },
            {
              "id": "427e86d2-c181-49fc-b121-04fbbe802479",
              "name": "Kira.kiraApiKey",
              "value": "mFosprHN8L3eA5La8efxvqcg",
              "type": "string"
            },
            {
              "id": "23d86582-fd29-4ff9-a4af-3c33d18d7e47",
              "name": "Kira.ClientConversatrion",
              "value": "={{ (() => { \n    let number = $json.body.conversation.meta.sender.identifier.split('@')[0] || null;\n\n    // Se o número tiver pelo menos 4 dígitos, insere o \"9\" após o 4º dígito\n    return (number && number.length > 4) ? number.slice(0, 4) + \"9\" + number.slice(4) : number;\n})() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8364c2ef-da47-4055-92a1-071af216f5a9",
      "name": "Normalização",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -760,
        1180
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://woot.hausenchat.in/api/v1/accounts/{{ $('Normalização').item.json.Kira.accountID }}/conversations/{{ $('Normalização').item.json.Client.conversationId }}/assignments",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('Normalização').item.json.Kira.kiraApiKey }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "=assignee_id",
              "value": "={{ JSON.stringify($json.assignee_id).replace(/\\\\n/g, '\\n').replace(/^\"|\"$/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7fab6672-1668-489c-b853-cc75c82de722",
      "name": "Desliga Kira",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2360,
        640
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "0tSqndIObllW1kBs",
          "name": "Kira_woot"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "messages": {
          "messageValues": [
            {
              "message": "={   \"sender\": \"{{ $('Normalização').item.json.Client.senderType }}\",   \"name\": \"{{ $('Normalização').item.json.Client.senderName }}\",   \"content\": \"{{ $('Normalização').item.json.Message.content }}\" }"
            }
          ]
        }
      },
      "id": "9c8818ee-f48a-4fa6-8966-cf7398294d43",
      "name": "Chat Memory Manager",
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        3400,
        880
      ],
      "disabled": true
    },
    {
      "parameters": {
        "sessionTTL": 7000000,
        "contextWindowLength": 20
      },
      "id": "beae7335-1e98-4bb5-be3b-4dc0abcbcc2b",
      "name": "Redis Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        3320,
        1140
      ],
      "credentials": {
        "redis": {
          "id": "WSSBfDOqAmTHQcR6",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "id": "ccd479a9-cd39-4ea1-b93e-15d0248bb22b",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2020,
        1720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2d9ee6f0-9c4b-4ad5-9030-844db32468a2",
              "leftValue": "={{ $json.Id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5f425dcb-d6d5-4b94-8a89-fd86846973e3",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4520,
        1320
      ]
    },
    {
      "parameters": {
        "action": "generate"
      },
      "id": "b0da30f9-0c04-4ba9-a8fc-3d447a1bd224",
      "name": "GeraUUID",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        5480,
        820
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Normalização').item.json.Client.senderID.toString() }}",
        "messageData": "={{ JSON.stringify({   \"message\": $json.InputAI,   \"timestamp\": $now,   \"message_id\": $('Normalização').item.json.Message.id }) }}"
      },
      "id": "28454dc6-a7f6-4a34-a6bc-5d2911f6133f",
      "name": "Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3600,
        2900
      ],
      "credentials": {
        "redis": {
          "id": "WSSBfDOqAmTHQcR6",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "messages",
        "key": "={{ $('Normalização').item.json.Client.senderID.toString() }}",
        "options": {}
      },
      "id": "8dd7f2c4-a070-42f7-8208-aa32dd65a728",
      "name": "Redis1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4080,
        2900
      ],
      "credentials": {
        "redis": {
          "id": "WSSBfDOqAmTHQcR6",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Normalização').item.json.Client.senderID.toString() }}"
      },
      "id": "9b75ccd4-6ea6-436c-b667-b25383b77620",
      "name": "Redis2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        5480,
        2900
      ],
      "credentials": {
        "redis": {
          "id": "WSSBfDOqAmTHQcR6",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "id": "48bd0f41-8cee-4321-a90c-3ce727284e46",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4860,
        3120
      ],
      "webhookId": "1183b1cd-0d2c-4357-a74d-b8ae4bfe8144"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "db5cfe0a-7f43-4a61-8b27-bfd3a95deb8d",
              "name": "messages",
              "value": "={{ $json.messages.map(item => JSON.parse(item).message).reverse().join(' ') }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ea2bcf31-c3eb-4715-9cb6-a96e5fbe3490",
      "name": "Mensagens",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5700,
        3140
      ]
    },
    {
      "parameters": {},
      "id": "1b045cff-e5bb-476e-8ce2-5fded3285223",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4860,
        2740
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ \n  $json.messages.length > 8 \n    ? $('Normalização').item.json.Message.id\n    : JSON.parse($json.messages.first()).message_id\n}}",
                    "rightValue": "={{ $('Normalização').item.json.Message.id }}",
                    "operator": {
                      "type": "number",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "faz nada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1585bc24-0b58-4179-8919-0e9aabc0e35e",
                    "leftValue": "={{ JSON.parse($json.messages.last()).timestamp }}",
                    "rightValue": "={{ $now.minus(5.'seconds') }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "prosseguir"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "esperar"
        }
      },
      "id": "54c16814-63e9-4e8a-9190-9bfec203bf52",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4340,
        2900
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://pdf.bitfy.ai/api/v1/convert/pdf/img",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "*/*"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "imageFormat",
              "value": "jpg"
            },
            {
              "name": "singleOrMultiple",
              "value": "single"
            },
            {
              "name": "colorType",
              "value": "color"
            },
            {
              "name": "dpi",
              "value": "170"
            },
            {
              "parameterType": "formBinaryData",
              "name": "fileInput",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "77d03872-7899-40b0-a5ff-4922f3f142bd",
      "name": "ConvertePDF",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6040,
        1820
      ],
      "notesInFlow": true
    },
    {
      "parameters": {},
      "id": "fb9a483a-632b-47bf-ad26-73f933667f58",
      "name": "NoOp.1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        6280,
        1820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "136661ad-ba81-44ad-b18c-0ad541505a80",
              "leftValue": "={{ $('Normalização').item.json.Message.contentUrl }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8daef49a-76f1-4630-86fc-d1b658e9df1f",
      "name": "MidiaExiste?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4240,
        2340
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2c9a60df-cb78-4f57-916c-36dabcc6304d",
              "name": "message",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9ec25975-c20b-47e5-86bd-e0bc39ea67c2",
      "name": "Padronização",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6300,
        2000
      ]
    },
    {
      "parameters": {},
      "id": "831f0727-bef2-430b-8716-5d35f468a390",
      "name": "NoOp.7",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4840,
        2360
      ]
    },
    {
      "parameters": {
        "url": "={{ $('Normalização').item.json.Message.contentUrl }}",
        "options": {
          "batching": {
            "batch": {}
          },
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "0de4ce6b-1f69-4eb2-86bd-73d88cb33158",
      "name": "GetMidia",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4420,
        1940
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9567d6ed-399e-4fe6-9e6a-48a5d9eba008",
              "name": "InputAI",
              "value": "={{ $json.message || $('Merge-2').item.json.content }} ",
              "type": "string"
            },
            {
              "id": "ddc301f6-12cb-43a1-8848-f91351c24329",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "91372edd-bd94-4648-aca7-ab35da02a387",
      "name": "InputAI",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        7160,
        2340
      ]
    },
    {
      "parameters": {},
      "id": "e9950efd-bbdd-45ba-9e37-ab2e65ecb753",
      "name": "NoOp.",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        6060,
        2200
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0f5b3d89-7f61-4b86-95a3-48f37acff871",
                    "leftValue": "={{ $('Normalização').item.json.Message.type }}",
                    "rightValue": "pdf",
                    "operator": {
                      "type": "string",
                      "operation": "endsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pdf"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Normalização').item.json.Message.type }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a4f0ea6d-038c-44c9-a233-12e6c85173dd",
                    "leftValue": "={{ $('Normalização').item.json.Message.type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "71002251-2cca-4e6f-b018-cb302b641c24",
      "name": "TipoMidia",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4860,
        1940
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "pt"
        }
      },
      "id": "9bf31052-6532-432f-8aa1-2c369113a7f9",
      "name": "Transcrição",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.5,
      "position": [
        6060,
        2000
      ],
      "credentials": {
        "openAiApi": {
          "id": "MYhemnhGrxLy3RF3",
          "name": "OpenAi EnchaT Encha Info"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa3e4f6c-7469-4edb-ba75-46e15903ab86",
              "name": "assignee_id",
              "value": "0",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2818c4f6-8cb9-4f69-85dd-c68a6277dcd7",
      "name": "comando para desligar IA",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2200,
        660
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa3e4f6c-7469-4edb-ba75-46e15903ab86",
              "name": "assignee_id",
              "value": "1",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e33619a9-25e5-4a5e-bbad-9402fd7dd9a6",
      "name": "comando para religar IA",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2440,
        1400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://woot.hausenchat.in/api/v1/accounts/{{ $('Normalização').item.json.Kira.accountID }}/conversations/{{ $('Normalização').item.json.Client.conversationId }}/assignments",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('Normalização').item.json.Kira.kiraApiKey }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "=assignee_id",
              "value": "={{ JSON.stringify($json.assignee_id).replace(/\\\\n/g, '\\n').replace(/^\"|\"$/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "895bba0a-09e0-4cf9-a332-0c93edb60d18",
      "name": "Religa Kira",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2720,
        1400
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "0tSqndIObllW1kBs",
          "name": "Kira_woot"
        }
      }
    },
    {
      "parameters": {},
      "id": "5ea44c6f-4fd3-459d-bd61-47aa960d83fd",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3140,
        1800
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Normalização').item.json.Client.senderType }}",
                    "rightValue": "User",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Intervenção"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1c4431b9-ef67-4c14-8844-5f089194d9da",
                    "leftValue": "={{ $('Normalização').item.json.Kira.assignee }}",
                    "rightValue": "Kira",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IA desligada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4294112c-44b6-497d-9dc8-a47f3dcffce0",
                    "leftValue": "={{ $('Normalização').item.json.Kira.assignee }}",
                    "rightValue": "Kira",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vai para IA"
            }
          ]
        },
        "options": {}
      },
      "id": "353ee401-9bed-4151-a1f1-7f2a96ebea8f",
      "name": "Switch2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1200,
        1220
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "af8e7746-79fd-4ecc-815d-a7523ca34905",
              "name": "sender",
              "value": "={{ $('Normalização').item.json.Kira.metaSsender_id }}",
              "type": "string"
            },
            {
              "id": "ff6c60f8-2e11-436f-a2ad-59edda09fe40",
              "name": "name",
              "value": "={{ $('Normalização').item.json.Client.senderName }}",
              "type": "string"
            },
            {
              "id": "fa2b0f98-77ee-47fa-b495-7bd595e31824",
              "name": "content",
              "value": "={{ $('Normalização').item.json.Message.content }}",
              "type": "string"
            },
            {
              "id": "48327f22-31c8-4c0c-bfa0-6541e94c1881",
              "name": "sessionId",
              "value": "={{ $json.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2be0edec-bc4d-47da-adf9-b80b72154964",
      "name": "Normaliza memória",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3160,
        940
      ]
    },
    {
      "parameters": {},
      "id": "7f7eae0e-69e2-4b9e-8462-d77add2d6abc",
      "name": "Usuario",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        6620,
        1320
      ],
      "notesInFlow": false,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "id": "2e1f7fc6-56cc-41bd-a307-606784bc05cf",
      "name": "Merge-2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        6960,
        2300
      ],
      "notesInFlow": false
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        6920,
        1320
      ],
      "id": "1a446502-cf89-4863-a81d-4cc38622163a",
      "name": "No Operation, do nothing5"
    },
    {
      "parameters": {
        "mode": "delete",
        "deleteMode": "all"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        280,
        3460
      ],
      "id": "5f1ce25f-a524-4af2-941f-0a52b194fe2b",
      "name": "Chat Memory Manager2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        720,
        3400
      ],
      "id": "bd385794-eb90-4aa6-b859-74e442cfe294",
      "name": "Chat Memory Manager3",
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "3a0db2e7-f4a0-499d-8e63-93cec6488f47"
      },
      "id": "62d07436-2ce0-40c9-9a97-5fcb3a6dce08",
      "name": "Redis Chat Memory1",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        520,
        3760
      ],
      "credentials": {
        "redis": {
          "id": "WSSBfDOqAmTHQcR6",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Análise e informe que tem na imagem. Sempre que informar coloque a seguinte mensagem, adicionando um '\\n' antes de enviar a mensagem e ao final da mensagem, abaixo está o modelo de mensagem:\n- A mensagem enviada pelo cliente tem (aqui você coloca seu texto) (ao terminar de descrever a imagem, coloque um \\n)\n",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        5580,
        2100
      ],
      "id": "fb95ffa5-3e89-4880-8368-6e131fe6ffb1",
      "name": "OpenAI6",
      "credentials": {
        "openAiApi": {
          "id": "MYhemnhGrxLy3RF3",
          "name": "OpenAi EnchaT Encha Info"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7b93fad8-73ef-4fae-b749-99f8f44e620e",
              "name": "message",
              "value": "={{ $('Normalização').item.json.Message.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5620,
        2360
      ],
      "id": "68df1f97-6301-48c3-a269-bc47342811dd",
      "name": "Captura Mensagem"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2d9ee6f0-9c4b-4ad5-9030-844db32468a2",
              "leftValue": "={{ $json.Id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ba1eb428-8652-42cf-b4e6-062d93d80791",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2120,
        460
      ]
    },
    {
      "parameters": {
        "action": "generate"
      },
      "id": "35b0e3db-e489-4dce-b3a5-09f9aec7ebfb",
      "name": "GeraUUID1",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        3500,
        400
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa3e4f6c-7469-4edb-ba75-46e15903ab86",
              "name": "assignee_id",
              "value": "0",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f6ee8d72-3666-4bff-ab53-592ba617470f",
      "name": "comando para desligar IA2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4060,
        400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normalização').item.json.Kira.kirawootUrl }}api/v1/accounts/{{ $('Normalização').item.json.Kira.accountID }}/conversations/{{ $('Normalização').item.json.Client.conversationId }}/assignments",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('Normalização').item.json.Kira.kiraApiKey }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "=assignee_id",
              "value": "={{ JSON.stringify($json.assignee_id).replace(/\\\\n/g, '\\n').replace(/^\"|\"$/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f54d5502-7fd8-46fb-ba66-aca30746a2f7",
      "name": "Desliga Kira2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4280,
        400
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "0tSqndIObllW1kBs",
          "name": "Kira_woot"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "85d5ddce-597d-4c64-acca-969a4ae0b856",
              "leftValue": "={{ $('Webhook').item.json.body.message_type }}",
              "rightValue": "outgoing",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "6c6ebc4c-3373-4af1-a4fc-bba12c8e0045",
              "leftValue": "={{ $('Webhook').item.json.body.sender.name }}",
              "rightValue": "Kira",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "f3a272d8-c381-4abf-b1bb-e110441e9aa6",
              "leftValue": "={{ $('Webhook').item.json.body.conversation.messages[0].source_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1700,
        700
      ],
      "id": "de41c91b-bea6-48b6-80ed-6ba60ea0767c",
      "name": "antigo"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "a27fa068-8bc3-42d5-a626-d33aefaf3097",
      "name": "LoopItems2",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        9620,
        3080
      ]
    },
    {
      "parameters": {
        "amount": 1.2
      },
      "id": "d3f39924-85bb-4361-967f-c2cf22464bff",
      "name": "Digitando2",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        10220,
        3180
      ],
      "webhookId": "7e9d4594-fc00-4a7e-9d03-0868fce3a7f2"
    },
    {
      "parameters": {},
      "id": "485278cb-e362-499e-8495-2efb31b850a1",
      "name": "NoOp.9",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        10420,
        3280
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normalização').item.json.Kira.kirawootUrl }}api/v1/accounts/{{ $('Normalização').item.json.Kira.accountID }}/conversations/{{ $('Normalização').item.json.Client.conversationId }}/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('Normalização').item.json.Kira.kiraApiKey }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "content",
              "value": "={{ JSON.stringify($json.output).replace(/\\\\n/g, '\\n').replace(/^\"|\"$/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2d10a9c7-424a-412b-983d-1d7ebbcbbd66",
      "name": "sendChatWoot5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9940,
        3160
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "0tSqndIObllW1kBs",
          "name": "Kira_woot"
        }
      }
    },
    {
      "parameters": {
        "content": "![Encha](https://encha.ai/wp-content/uploads/2025/01/Logo-ENCHA_AI-1.png)",
        "height": 360,
        "width": 1200,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1600,
        -160
      ],
      "id": "9db17fc2-c9de-4d5a-8cab-24cfec72d4da",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "778df45b-1d4e-429e-9345-a665a1f48c28",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2040,
        700
      ],
      "id": "72436a69-8b63-4291-8bc9-78bae5347b98",
      "name": "Webhook",
      "webhookId": "778df45b-1d4e-429e-9345-a665a1f48c28"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Enchat",
          "mode": "list",
          "cachedResultName": "Enchat"
        },
        "where": {
          "values": [
            {
              "column": "UserId",
              "value": "={{ $('Normalização').item.json.Kira.ClientConversatrion }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1860,
        460
      ],
      "id": "3a3e91ae-d6be-4114-a281-597e0e372c2f",
      "name": "Postgres",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Enchat",
          "mode": "list",
          "cachedResultName": "Enchat"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "IaLigada": false,
            "UserId": "={{ $('Normalização').item.json.Client.senderID }}",
            "PushName": "={{ $('Normalização').item.json.Client.senderName }}",
            "ConversationId": "={{ $('Normalização').item.json.Client.conversationId }}",
            "SessionId": "={{ $json.data }}",
            "Produtos Comprados": "={{ $('If6').item.json.Produto  || null}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "UserId",
              "displayName": "UserId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "PushName",
              "displayName": "PushName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SessionId",
              "displayName": "SessionId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "UserType",
              "displayName": "UserType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "IaLigada",
              "displayName": "IaLigada",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "Especialista",
              "displayName": "Especialista",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Nome Completo",
              "displayName": "Nome Completo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "EAluno",
              "displayName": "EAluno",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ConversationId",
              "displayName": "ConversationId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "LastUpdated",
              "displayName": "LastUpdated",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "GoogleDrive",
              "displayName": "GoogleDrive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CreatedAt",
              "displayName": "CreatedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "time",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Insta",
              "displayName": "Insta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Produtos Comprados",
              "displayName": "Produtos Comprados",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Produtos Reembolsados",
              "displayName": "Produtos Reembolsados",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "FUP de Conversa",
              "displayName": "FUP de Conversa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3720,
        400
      ],
      "id": "9c6edbeb-4969-4a5a-a76b-af4eb2f68c8d",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Enchat",
          "mode": "list",
          "cachedResultName": "Enchat"
        },
        "where": {
          "values": [
            {
              "column": "UserId",
              "value": "={{ $('Normalização').item.json.Kira.ClientConversatrion }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4020,
        1320
      ],
      "id": "529fc59c-a916-426f-933d-9f92dbc209f1",
      "name": "Postgres2",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Enchat",
          "mode": "list",
          "cachedResultName": "Enchat"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "UserId": "={{ $('Normalização').item.json.Client.senderID }}",
            "PushName": "={{ $('Normalização').item.json.Client.senderName }}",
            "SessionId": "={{ $json.data }}",
            "ConversationId": "={{ $('Normalização').item.json.Client.conversationId }}",
            "Produtos Comprados": "={{ $('If4').item.json.Produto }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "UserId",
              "displayName": "UserId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "PushName",
              "displayName": "PushName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SessionId",
              "displayName": "SessionId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "UserType",
              "displayName": "UserType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "IaLigada",
              "displayName": "IaLigada",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Especialista",
              "displayName": "Especialista",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Nome Completo",
              "displayName": "Nome Completo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "EAluno",
              "displayName": "EAluno",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ConversationId",
              "displayName": "ConversationId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "LastUpdated",
              "displayName": "LastUpdated",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "GoogleDrive",
              "displayName": "GoogleDrive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CreatedAt",
              "displayName": "CreatedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "time",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Insta",
              "displayName": "Insta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Produtos Comprados",
              "displayName": "Produtos Comprados",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Produtos Reembolsados",
              "displayName": "Produtos Reembolsados",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "FUP de Conversa",
              "displayName": "FUP de Conversa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        6040,
        800
      ],
      "id": "4a46f5c4-d6e1-4c05-b969-55457ea34db7",
      "name": "Postgres3",
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        8580,
        4360
      ],
      "id": "72cf3c5b-97f0-4657-af9b-a22ec66758fd",
      "name": "Calculator"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.messages }}",
        "options": {
          "systemMessage": "=<CurrentTime>  \n Hoje é dia {{ $now.toString() }}, dia da semana{{ new Date().toLocaleDateString('pt-BR', { weekday: 'long' }) }}\n\nPróxima segunda feira será no dia: {{ $('timmer').item.json.nextMondayISO }}-{{ $('timmer').item.json.nextMondayFormatted }}\n\nSempre que for calcular datas, use a função \"Calculator\"\n</CurrentTime>  \n\n<Persona>\n1.\tVocê é kira, atendente da Encha, especialista em psicologia humana, atendimento ao cliente e especializada em recuperação de vendas.\n</Persona>  \n<Roteiro>\n1. Você deve iniciar se apresentando e falando aonde você trabalha, ao final você deve informar que percebeu que o cliente demonstrou interesse no curso mas ainda não realizou a compra e gostaria de entender o motivo.\n2. Perguntar porque o cliente ainda não realizou a compra do curso (se aprofunde neste assunto).\n\n3. Se o cliente tiver alguma dúvida do curso, você deve responder.\n\n4. Após saber o motivo do cliente não comprar e ter respondido as dúvidas dele, pergunte se o cliente tem interesse em realizar a compra. Se ele não tiver se despeça e agradeça em nome da Encha. Se ele tiver, envie o seguinte link:https://pay.kiwify.com.br/sQ74iyx e diga que aguarde ansiosamente por ele.\n\n5. Se o cliente perguntar sobre mentoria/consultoria você deve informar que fazemos consultoria on-line mas que antes precisamos entender o problema do cliente, e após essa mensagem, pergunte se ele gostaria de prosseguir com o processo de consultoria/mentoria.\n  - Se ele aceitar a consultoria, chame a função 'Mentoria' e após chamar a função, envie somente a seguinte mensagem 'Por favor, me conte mais sobre o seu problema ou em que posso te ajudar! 😊'.\n\n\n\n</Roteiro> \n<Exemplo de situações> \nO curso custa 197,00 mas pode ser divido em até 12x (com juros).\n\n1 Quais os custos que vou ter além da compra do curso? \nResposta Sugerida: O único custo que você terá é com uma VPS que custa 54,00 e um domínio que você pode achar até de 7,00 por ano \n\n2 Eu nunca tive contato ou tenho pouco, preciso programar?\nResposta Sugerida: Não, você não precisa ter conhecimento de programação, é um curso para iniciantes, onde você vai aprender do zero \n\n3 O curso é vitalício?\nResposta Sugerida: Sim, você tem acesso vitalício \n\n4 Já tem templates prontos?\nResposta Sugerida: Sim, temos prontos, onde você só faz o download \n\n5 Ensinam a fazer do zero? \nResposta Sugerida: Sim, você vai aprender a fazer tudo do zero \n\n\n6 O curso já está todo gravado? \nResposta Sugerida: Sim, hoje temos mais de 70 aulas gravadas, aulas com 5 a 20 minutos, aulas simples, diretas e didáticas \n\n7 As aulas são atualizadas?\nResposta Sugerida: São atualizadas conforme a necessidade e se fizer sentido para a criação do agente \n\n8 Vocês ensinam a vender? \nResposta Sugerida: Não, neste curso não ensinamos a vender apenas criar um agente do zero,mas de forma clara e simples, a venda é tranquila, se você tiver um agente pronto para mostrar, ele mesmo já serve como exemplo, qualquer lugar que você sabe que tem muito demanda de mensagens é um bom cliente, como por exemplo, hoje na nossa carteira de clientes temos muitas imobiliárias é um bom público, se você mostrar uma agente funcionando, e resolvendo o problema deles, principalmente na qualificação de leads, é difícil eles não fecharem com você.\n\n9 Se eu tiver alguma dúvida ou dificuldade vocês têm suporte?\nResposta Sugerida: Sim, aqui você terá três níveis de suporte: \n nos comentários das aulas\n- no whatsapp\n- no meeting nos casos não resolvidos acima\n\n\n10 O curso tem garantia?\nResposta Sugerida: Sim, você tem até 07 dias para pedir o reembolso, caso o curso não atenda às suas expectativas \n\n11 Vocês têm mentoria individual? \nResposta Sugerida: Sim, temos mentoria, me explica qual o seu projeto por gentileza\n\n12 Vocês dão consultoria?\nResposta Sugerida: Sim, damos consultoria, me explica qual sua dúvida e como podemos te ajudar\n\n13 Neste curso eu consigo aprender a criar agentes para fazer prospecção?\nResposta Sugerida: Sim, todo tipo de agente de IA, a lógica é a mesma para todos, o que vai mudar vai ser o prompt \n\n14 Neste curso eu consigo fazer disparo de mensagens?\nResposta Sugerida: Sim, você vai aprender a fazer isso no curso, mas não usamos a API oficial da META\n\n15 Quais ferramentas vocês usam?\nResposta Sugerida: Usamos o N8N\n\n16 Quantos clientes é possível ter com uma VPS de 54,00\nResposta Sugerida: Você já consegue no mínimo  8 clientes \n\n17 O curso além de ensinar a criar as IA ele ensina a treiná-las também?\nResposta Sugerida: ensinamos um processo automatizado onde você basta subir o conteúdo do treinamento e automaticamente todo conteúdo é vetorizado e entra na base de dados da sua IA. Dali em diante ela só dá resposta para o que foi treinada\n\n18 Dúvida sobre o domínio, o que é? E como usar? Ou qual melhor?\n\n\nA Hostinger é só um servidor, vc pode usar qualquer outro servidor se não quiser usar a hostinger, mas sem servidor não tem como funcionar.\n Vc pode oferecer para o cliente dentro da sua estrutura  ou fazer um servidor para cada cliente. A vantagem de um servidor para cada cliente é que se você precisar paralisar o servidor para dar suporte isso não vai afetar outros clientes, o ponto negativo é que vc vai ter que cobrar o servidor de cada cliente mas isso você dilui na mensalidade.\n\nA vantagem de um usar um servidor para vários clientes é que você não precisa gastar com um servidor para cada cliente.  A desvantagem é que quando precisar parar um servidor para dar manutenção todos os outros clientes ficarão sem serviço.\n\n\n19 Vocês tem grupo de Whatsapp ou comunidade? \nResposta Sugerida: Não temos grupo, porque o problema que acontecia era que como a maioria dos alunos são iniciantes entrava aluno dando explicação errada na comunidade e depois o suporte ficava sobrecarregado resolvendo enganos.\n\nPor isso oferecemos suporte porque é mais eficiente\n\n20 Vocês dão consultoria ou mentoria? Sim, qual o valor? \nResposta Sugerida: Na mentoria nossos desenvolvedores vão pegar na sua mão e te acompanhar passo a passo nos seus projetos individuais. Serve tanto para fazer projetos do zero como para destravar alguma parte que você não conseguiu evoluir. O custo por hoje é R$450 e você também pode adquirir pacotes de 10h por R$3.750.\n\n\n21 O que tem no curso IA VISUAL?\nResposta Sugerida: O IA VISUAL é um curso onde você vai aprender a utilizar ferramentas de Inteligência Artificial para criar:\nCriar imagens e fotos profissionais sem precisar de estúdio ou fotógrafo.\nGerar avatares e vídeos personalizados para sua marca.\nDesenvolver sites e apresentações impactantes de forma simples.\nProjetar logotipos e identidades visuais com alta qualidade.\nVocê vai aprender a gerar tudo isso através de prompt \nTEM FERRAMENTAS PAGAS E GRATUITAS\n\n\n\n\n</ Exemplo de situações > \n<Observacoes>\n\n</ Observacoes >\n\n<Objetivo>\n\n\n</Objetivo>\n<Panorama>  \n\n\n</Panorama>  \n\n<Funções>  \nMentoria ->  Se o cliente perguntar sobre mentoria/consultoria você deve informar que fazemos consultoria on-line mas que antes precisamos entender o problema do cliente, e após essa mensagem, pergunte se ele gostaria de prosseguir com o processo de consultoria/mentoria.\n  - Se ele aceitar a consultoria, chame está função e após chamar a função, envie somente a seguinte mensagem 'Por favor, me conte mais sobre o seu problema ou em que posso te ajudar! 😊'.\n</Funções>   \n\n\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        6660,
        3440
      ],
      "id": "e6be6baa-8d87-491d-8551-cb68e8ad3e3c",
      "name": "Recupera Vendas"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        6920,
        4400
      ],
      "id": "10c7021b-1cbd-4e3d-bb80-e60f52a69e3f",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "MYhemnhGrxLy3RF3",
          "name": "OpenAi EnchaT Encha Info"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Usuario').item.json.SessionId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        7060,
        4400
      ],
      "id": "120bf988-4e84-4c1e-96e5-7c68ac0e1608",
      "name": "Redis Chat Memory2",
      "credentials": {
        "redis": {
          "id": "WSSBfDOqAmTHQcR6",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Enchat",
          "mode": "list",
          "cachedResultName": "Enchat"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "UserId": "={{ $('Usuario').item.json.UserId }}",
            "LastUpdated": "={{ $now }}",
            "IaLigada": true
          },
          "matchingColumns": [
            "UserId"
          ],
          "schema": [
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CreatedAt",
              "displayName": "CreatedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "UserId",
              "displayName": "UserId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "PushName",
              "displayName": "PushName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "SessionId",
              "displayName": "SessionId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "UserType",
              "displayName": "UserType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "IaLigada",
              "displayName": "IaLigada",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Especialista",
              "displayName": "Especialista",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Nome Completo",
              "displayName": "Nome Completo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "EAluno",
              "displayName": "EAluno",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ConversationId",
              "displayName": "ConversationId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "LastUpdated",
              "displayName": "LastUpdated",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "FUP_5min",
              "displayName": "FUP_5min",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "FUP_10min",
              "displayName": "FUP_10min",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "GoogleDrive",
              "displayName": "GoogleDrive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Produtos",
              "displayName": "Produtos",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        9840,
        2980
      ],
      "id": "bd1b0c83-a24b-4987-a1c6-5c97767ff1a0",
      "name": "Postgres4",
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Labels').item.json.labels }}",
                    "rightValue": "",
                    "operator": {
                      "type": "array",
                      "operation": "empty",
                      "singleValue": true
                    },
                    "id": "db08e3a6-e7e6-42ae-a697-5f3d39a974da"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "=Generalista"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d945af95-f4f3-43e7-ad56-5feb5825045c",
                    "leftValue": "={{ $('Labels').item.json.labels.last() }}",
                    "rightValue": "exercito",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "exercito"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6aff3ddd-f7d3-4a47-9e6e-f6bd22b39764",
                    "leftValue": "={{ $('Labels').item.json.labels.last() }}",
                    "rightValue": "visual",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "visual"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7e76c252-4e9b-4a3e-825b-4acfc8ce6e5f",
                    "leftValue": "={{ $('Labels').item.json.labels.last() }}",
                    "rightValue": "recuperacao_venda",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "recuperacao_venda"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e555ff4f-a2eb-41d2-9784-7495a6f7275d",
                    "leftValue": "={{ $('Labels').item.json.labels.last() }}",
                    "rightValue": "mentoria_projeto",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        6140,
        3060
      ],
      "id": "8f67883b-2da7-4716-a0b0-c5998a2ca19d",
      "name": "Switch"
    },
    {
      "parameters": {
        "jsCode": "let response = $input.first().json.Kira.labels;\nlet itemRetirar = ['1_ia_ligada', '2_lead_fora']\n\n\n// Filtrar a tag 'ia_ligada'\nlet label = response.filter((item) => !itemRetirar.includes(item))\n\nif (label.includes('mentoria_projeto')){\n   label = label.filter((item) => item !=='mentoria_projeto');\n    label =[...label, 'mentoria_projeto']\n}\n\n// Retornar o resultado\nreturn [{ json: { labels: label } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        100,
        1280
      ],
      "id": "798fb639-18fe-466b-a9ba-9f38c1780df7",
      "name": "Labels"
    },
    {
      "parameters": {
        "jsCode": "const now = new Date();\nconst dayOfWeek = now.getDay(); // 0 = Domingo, 1 = Segunda, ..., 6 = Sábado\nconst daysUntilMonday = (8 - dayOfWeek) % 7 || 7; // Ajuste para sempre pegar a próxima segunda\nconst nextMonday = new Date();\nnextMonday.setDate(now.getDate() + daysUntilMonday);\n\nreturn [\n  {\n    nextMondayISO: nextMonday.toISOString().split('T')[0], // Formato YYYY-MM-DD\n    nextMondayFormatted: nextMonday.toLocaleDateString('pt-BR', { weekday: 'long', day: '2-digit', month: '2-digit', year: 'numeric' })\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        360,
        1280
      ],
      "id": "6919f3f3-f7e9-4b94-8635-7eba0e88a584",
      "name": "timmer",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.messages }}",
        "options": {
          "systemMessage": "=<CurrentTime>  \n Hoje é dia {{ $now.toString() }}, dia da semana{{ new Date().toLocaleDateString('pt-BR', { weekday: 'long' }) }}\n\nPróxima segunda feira será no dia: {{ $('timmer').item.json.nextMondayISO }}-{{ $('timmer').item.json.nextMondayFormatted }}\nSempre que for calcular datas, use a função \"Calculator\"\n</CurrentTime>  \n\n<Persona>\n1.\tVocê é kira, atendente da Encha, especialista em psicologia humana, atendimento ao cliente e espeialista em sanar dúvidas dos clientes.\n</Persona>  \n<Roteiro>\n1. Você deve recepcionar o cliente se apresentando e falando em qual empresa você trabalha.\n\n2. responder as dúvidas do cliente.\n\n3. Após sanar algumas dúvidas pergunte ao cliente se ele tem mais, se acaso ele não tiver, pergunte se o cliente tem interesse em comprar o curso. Se ele não tiver, pergunte o porque. Se ele tiver envie o seguinte link:https://pay.kiwify.com.br/sQ74iyx.\n\n4.  Se o cliente perguntar sobre mentoria/consultoria você deve informar que fazemos mentoria/consultoria on-line mas que antes precisamos entender o problema do cliente, e após essa mensagem, pergunte se ele gostaria de prosseguir com o processo de consultoria/mentoria.\n  - Se ele aceitar a consultoria, chame a função 'Mentoria' e após chamar a função, envie somente a seguinte mensagem 'Por favor, me conte mais sobre o seu problema ou em que posso te ajudar! 😊'.\n\n\n5. Se o cliente abordar o assunto de emprego, ou seja, deseja adquirir um emprego na Encha, você deve chamar a função 'emprego' e informar que o gestor entrará em contato para dar continuidade ao atendimento e já peça para que ele envie o seu currículo.\n\n6. Se o cliente perguntar sobre preço, plataforma que está localizado o curso, enfim, tudo que de finalidade ao setor de venda, chame a função 'VendaRecupera' e depois envie uma mensagem coerente com a conversa sem informar que você chamou a função. Isso deve ser feito de maneira sigilosa.\n\n7. Se durante a conversa o cliente informar que depois irá entrar em contato, ou que está ocupado no momento, enfim... Algo que de a entender que a conversa será pausada por parte do cliente mas que ele entrará em contato depois, você deve chamar a função 'Cancela_FUP' e depois de chamar a função, mande a seguinte mensagem 'Ok, fico no seu aguardo. Até mais!😊'\n\n\n\n</Roteiro> \n<Exemplo de situações> \nO curso custa 197,00 mas pode ser divido em até 12x (com juros).\n\n1 Quais os custos que vou ter além da compra do curso? \nResposta Sugerida: O único custo que você terá é com uma VPS que custa 54,00 e um domínio que você pode achar até de 7,00 por ano \n\n2 Eu nunca tive contato ou tenho pouco, preciso programar?\nResposta Sugerida: Não, você não precisa ter conhecimento de programação, é um curso para iniciantes, onde você vai aprender do zero \n\n3 O curso é vitalício?\nResposta Sugerida: Sim, você tem acesso vitalício \n\n4 Já tem templates prontos?\nResposta Sugerida: Sim, temos prontos, onde você só faz o download \n\n5 Ensinam a fazer do zero? \nResposta Sugerida: Sim, você vai aprender a fazer tudo do zero \n\n\n6 O curso já está todo gravado? \nResposta Sugerida: Sim, hoje temos mais de 70 aulas gravadas, aulas com 5 a 20 minutos, aulas simples, diretas e didáticas \n\n7 As aulas são atualizadas?\nResposta Sugerida: São atualizadas conforme a necessidade e se fizer sentido para a criação do agente \n\n8 Vocês ensinam a vender? \nResposta Sugerida: Não, neste curso não ensinamos a vender apenas criar um agente do zero,mas de forma clara e simples, a venda é tranquila, se você tiver um agente pronto para mostrar, ele mesmo já serve como exemplo, qualquer lugar que você sabe que tem muito demanda de mensagens é um bom cliente, como por exemplo, hoje na nossa carteira de clientes temos muitas imobiliárias é um bom público, se você mostrar uma agente funcionando, e resolvendo o problema deles, principalmente na qualificação de leads, é difícil eles não fecharem com você.\n\n9 Se eu tiver alguma dúvida ou dificuldade vocês têm suporte?\nResposta Sugerida: Sim, aqui você terá três níveis de suporte: \n nos comentários das aulas\n- no whatsapp\n- no meeting nos casos não resolvidos acima\n\n\n10 O curso tem garantia?\nResposta Sugerida: Sim, você tem até 07 dias para pedir o reembolso, caso o curso não atenda às suas expectativas \n\n11 Vocês têm mentoria individual? \nResposta Sugerida: Sim, temos mentoria, me explica qual o seu projeto por gentileza\n\n12 Vocês dão consultoria?\nResposta Sugerida: Sim, damos consultoria, me explica qual sua dúvida e como podemos te ajudar\n\n13 Neste curso eu consigo aprender a criar agentes para fazer prospecção?\nResposta Sugerida: Sim, todo tipo de agente de IA, a lógica é a mesma para todos, o que vai mudar vai ser o prompt \n\n14 Neste curso eu consigo fazer disparo de mensagens?\nResposta Sugerida: Sim, você vai aprender a fazer isso no curso, mas não usamos a API oficial da META\n\n15 Quais ferramentas vocês usam?\nResposta Sugerida: Usamos o N8N\n\n16 Quantos clientes é possível ter com uma VPS de 54,00\nResposta Sugerida: Você já consegue no mínimo  8 clientes \n\n17 O curso além de ensinar a criar as IA ele ensina a treiná-las também?\nResposta Sugerida: ensinamos um processo automatizado onde você basta subir o conteúdo do treinamento e automaticamente todo conteúdo é vetorizado e entra na base de dados da sua IA. Dali em diante ela só dá resposta para o que foi treinada\n\n18 Dúvida sobre o domínio, o que é? E como usar? Ou qual melhor?\n\n\nA Hostinger é só um servidor, vc pode usar qualquer outro servidor se não quiser usar a hostinger, mas sem servidor não tem como funcionar.\n Vc pode oferecer para o cliente dentro da sua estrutura  ou fazer um servidor para cada cliente. A vantagem de um servidor para cada cliente é que se você precisar paralisar o servidor para dar suporte isso não vai afetar outros clientes, o ponto negativo é que vc vai ter que cobrar o servidor de cada cliente mas isso você dilui na mensalidade.\n\nA vantagem de um usar um servidor para vários clientes é que você não precisa gastar com um servidor para cada cliente.  A desvantagem é que quando precisar parar um servidor para dar manutenção todos os outros clientes ficarão sem serviço.\n\n\n19 Vocês tem grupo de Whatsapp ou comunidade? \nResposta Sugerida: Não temos grupo, porque o problema que acontecia era que como a maioria dos alunos são iniciantes entrava aluno dando explicação errada na comunidade e depois o suporte ficava sobrecarregado resolvendo enganos.\n\nPor isso oferecemos suporte porque é mais eficiente\n\n20 Vocês dão consultoria ou mentoria? Sim, qual o valor? \nResposta Sugerida: Na mentoria nossos desenvolvedores vão pegar na sua mão e te acompanhar passo a passo nos seus projetos individuais. Serve tanto para fazer projetos do zero como para destravar alguma parte que você não conseguiu evoluir. O custo por hoje é R$450 e você também pode adquirir pacotes de 10h por R$3.750.\n\n\n21 O que tem no curso IA VISUAL?\nResposta Sugerida: O IA VISUAL é um curso onde você vai aprender a utilizar ferramentas de Inteligência Artificial para criar:\nCriar imagens e fotos profissionais sem precisar de estúdio ou fotógrafo.\nGerar avatares e vídeos personalizados para sua marca.\nDesenvolver sites e apresentações impactantes de forma simples.\nProjetar logotipos e identidades visuais com alta qualidade.\nVocê vai aprender a gerar tudo isso através de prompt \nTEM FERRAMENTAS PAGAS E GRATUITAS\n\n\n\n\n</ Exemplo de situações > \n<Observacoes>\n\n</ Observacoes >\n\n<Objetivo>\n\n\n</Objetivo>\n<Panorama>  \n\n\n</Panorama>  \n\n<Funções>  \n\nMentoria ->  Se o cliente perguntar sobre mentoria/consultoria você deve informar que fazemos consultoria on-line mas que antes precisamos entender o problema do cliente, e após essa mensagem, pergunte se ele gostaria de prosseguir com o processo de consultoria/mentoria.\n  - Se ele aceitar a consultoria, chame está função e após chamar a função, envie somente a seguinte mensagem 'Por favor, me conte mais sobre o seu problema ou em que posso te ajudar! 😊'.\n\n\nemprego -> Se o cliente abordar o assunto de emprego, ou seja, deseja adquirir um emprego na Encha, você deve chamar está função e informar que o gestor entrará em contato para dar continuidade ao atendimento e já peça para que ele envie o seu currículo.\n\n\nVendaRecupera -> Se o cliente perguntar sobre preço, plataforma que está localizado o curso, enfim, tudo que de finalidade ao sentor de venda, chame está função e depois envie uma mensagem coerente com a conversa sem informar que você chamou a função. Isso deve ser feito de maneira sigilosa.\n\n\nCancela_FUP -> Se durante a conversa o cliente informar que depois irá entrar em contato, ou que está ocupado no momento, enfim... Algo que de a entender que a conversa será pausada por parte do cliente mas que ele entrará em contato depois, você deve chamar está função e depois de chamar a função, mande a seguinte mensagem 'Ok, fico no seu aguardo. Até mais!😊'\n\n</Funções>   \n\n\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        6620,
        2900
      ],
      "id": "f4630dc1-0155-404d-bcc4-c1d8e37c3489",
      "name": "IA Generalista"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.messages }}",
        "options": {
          "systemMessage": "=<CurrentTime>  \n Hoje é dia {{ $now.toString() }}, dia da semana{{ new Date().toLocaleDateString('pt-BR', { weekday: 'long' }) }}\n\n\nPróxima segunda feira será no dia: {{ $('timmer').item.json.nextMondayISO }}-{{ $('timmer').item.json.nextMondayFormatted }}\n\nSempre que for calcular datas, use a função \"Calculator\"\n</CurrentTime>  \n\n<Persona>\n1.\tVocê é kira, especialista em suporte da Encha e psicologia humana.\n</Persona>  \n<Roteiro>\n1. Deve recepcionar o cliente informando o seu nome e a sua função na Encha.\n\n2. Perguntar ao aluno qual a sua dificuldade.\n\n3. Perguntar se ele já reviu as aulas e consultou os materias disponiveis, porque assim ele consegue resolver a sua demanda de maneira mais rápida. Se ele não tiver visto, peça para que ele reveja as aulas.\n\n4. Se você pegar a dúvida do aluno e teve a informação que o aluno reviu as aulas, avise que um especialista entrará em contato para dar continuidade a demanda do aluno.\n\n5. Se o cliente perguntar sobre mentoria/consultoria você deve informar que fazemos consultoria on-line mas que antes precisamos entender o problema do cliente, e após essa mensagem, pergunte se ele gostaria de prosseguir com o processo de consultoria/mentoria.\n  - Se ele aceitar a consultoria, chame a função 'Mentoria' e após chamar a função, envie somente a seguinte mensagem 'Por favor, me conte mais sobre o seu problema ou em que posso te ajudar! 😊'.\n\n</Roteiro> \n<Exemplo de situações> \n Aluno informou a dúvida e disse que não reviu as aulas e nem consultou os materiais disponníveis.\n  Correção: A IA deve pedir ao aluno que reveja e se não conseguir sanar suas dúvidas, volte a conversa e relate.\n\n Aluno informou a dúvida, disse que reviu as aulas e consultou os matérias disponíveis, mesmo assim está com dificuldade.\n  Correção: A IA deve informar ao aluno que um especialista irá entrar em contato para dar continuidade ao atendimento.\n\n1 Quais os custos que vou ter além da compra do curso? \nResposta Sugerida: O único custo que você terá é com uma VPS que custa 54,00 e um domínio que você pode achar até de 7,00 por ano \n\n2 Eu nunca tive contato ou tenho pouco, preciso programar?\nResposta Sugerida: Não, você não precisa ter conhecimento de programação, é um curso para iniciantes, onde você vai aprender do zero \n\n3 O curso é vitalício?\nResposta Sugerida: Sim, você tem acesso vitalício \n\n4 Já tem templates prontos?\nResposta Sugerida: Sim, temos prontos, onde você só faz o download \n\n5 Ensinam a fazer do zero? \nResposta Sugerida: Sim, você vai aprender a fazer tudo do zero \n\n\n6 O curso já está todo gravado? \nResposta Sugerida: Sim, hoje temos mais de 70 aulas gravadas, aulas com 5 a 20 minutos, aulas simples, diretas e didáticas \n\n7 As aulas são atualizadas?\nResposta Sugerida: São atualizadas conforme a necessidade e se fizer sentido para a criação do agente \n\n8 Vocês ensinam a vender? \nResposta Sugerida: Não, neste curso não ensinamos a vender apenas criar um agente do zero,mas de forma clara e simples, a venda é tranquila, se você tiver um agente pronto para mostrar, ele mesmo já serve como exemplo, qualquer lugar que você sabe que tem muito demanda de mensagens é um bom cliente, como por exemplo, hoje na nossa carteira de clientes temos muitas imobiliárias é um bom público, se você mostrar uma agente funcionando, e resolvendo o problema deles, principalmente na qualificação de leads, é difícil eles não fecharem com você.\n\n9 Se eu tiver alguma dúvida ou dificuldade vocês têm suporte?\nResposta Sugerida: Sim, aqui você terá três níveis de suporte: \n nos comentários das aulas\n- no whatsapp\n- no meeting nos casos não resolvidos acima\n\n\n10 O curso tem garantia?\nResposta Sugerida: Sim, você tem até 07 dias para pedir o reembolso, caso o curso não atenda às suas expectativas \n\n11 Vocês têm mentoria individual? \nResposta Sugerida: Sim, temos mentoria, me explica qual o seu projeto por gentileza\n\n12 Vocês dão consultoria?\nResposta Sugerida: Sim, damos consultoria, me explica qual sua dúvida e como podemos te ajudar\n\n13 Neste curso eu consigo aprender a criar agentes para fazer prospecção?\nResposta Sugerida: Sim, todo tipo de agente de IA, a lógica é a mesma para todos, o que vai mudar vai ser o prompt \n\n14 Neste curso eu consigo fazer disparo de mensagens?\nResposta Sugerida: Sim, você vai aprender a fazer isso no curso, mas não usamos a API oficial da META\n\n15 Quais ferramentas vocês usam?\nResposta Sugerida: Usamos o N8N\n\n16 Quantos clientes é possível ter com uma VPS de 54,00\nResposta Sugerida: Você já consegue no mínimo  8 clientes \n\n17 O curso além de ensinar a criar as IA ele ensina a treiná-las também?\nResposta Sugerida: ensinamos um processo automatizado onde você basta subir o conteúdo do treinamento e automaticamente todo conteúdo é vetorizado e entra na base de dados da sua IA. Dali em diante ela só dá resposta para o que foi treinada\n\n18 Dúvida sobre o domínio, o que é? E como usar? Ou qual melhor?\n\n\nA Hostinger é só um servidor, vc pode usar qualquer outro servidor se não quiser usar a hostinger, mas sem servidor não tem como funcionar.\n Vc pode oferecer para o cliente dentro da sua estrutura  ou fazer um servidor para cada cliente. A vantagem de um servidor para cada cliente é que se você precisar paralisar o servidor para dar suporte isso não vai afetar outros clientes, o ponto negativo é que vc vai ter que cobrar o servidor de cada cliente mas isso você dilui na mensalidade.\n\nA vantagem de um usar um servidor para vários clientes é que você não precisa gastar com um servidor para cada cliente.  A desvantagem é que quando precisar parar um servidor para dar manutenção todos os outros clientes ficarão sem serviço.\n\n\n19 Vocês tem grupo de Whatsapp ou comunidade? \nResposta Sugerida: Não temos grupo, porque o problema que acontecia era que como a maioria dos alunos são iniciantes entrava aluno dando explicação errada na comunidade e depois o suporte ficava sobrecarregado resolvendo enganos.\n\nPor isso oferecemos suporte porque é mais eficiente\n\n20 Vocês dão consultoria ou mentoria? Sim, qual o valor? \nResposta Sugerida: Na mentoria nossos desenvolvedores vão pegar na sua mão e te acompanhar passo a passo nos seus projetos individuais. Serve tanto para fazer projetos do zero como para destravar alguma parte que você não conseguiu evoluir. O custo por hoje é R$450 e você também pode adquirir pacotes de 10h por R$3.750.\n\n\n21 O que tem no curso IA VISUAL?\nResposta Sugerida: O IA VISUAL é um curso onde você vai aprender a utilizar ferramentas de Inteligência Artificial para criar:\nCriar imagens e fotos profissionais sem precisar de estúdio ou fotógrafo.\nGerar avatares e vídeos personalizados para sua marca.\nDesenvolver sites e apresentações impactantes de forma simples.\nProjetar logotipos e identidades visuais com alta qualidade.\nVocê vai aprender a gerar tudo isso através de prompt \nTEM FERRAMENTAS PAGAS E GRATUITAS\n\n\n\n\n</ Exemplo de situações > \n<Observacoes>\n\n</ Observacoes >\n\n<Objetivo>\n\n\n</Objetivo>\n<Panorama>  \n\n\n</Panorama>  \n\n<Funções> \nMentoria ->  Se o cliente perguntar sobre mentoria/consultoria você deve informar que fazemos consultoria on-line mas que antes precisamos entender o problema do cliente, e após essa mensagem, pergunte se ele gostaria de prosseguir com o processo de consultoria/mentoria.\n  - Se ele aceitar a consultoria, chame está função e após chamar a função, envie somente a seguinte mensagem 'Por favor, me conte mais sobre o seu problema ou em que posso te ajudar! 😊'.\n\n\n\n\n</Funções>   \n\n\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        6640,
        3200
      ],
      "id": "f6b379cb-fdaf-4ef8-b8f4-2d1db015f0ec",
      "name": "IA Suporte Alunos",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.messages }}",
        "options": {
          "systemMessage": "=<CurrentTime>  \n Hoje é dia {{ $now.toString() }}, dia da semana{{ new Date().toLocaleDateString('pt-BR', { weekday: 'long' }) }}\n\nPróxima segunda feira será no dia: {{ $('timmer').item.json.nextMondayISO }}-{{ $('timmer').item.json.nextMondayFormatted }}\n\nSempre que for calcular datas, use a função \"Calculator\"\n</CurrentTime>  \n\n<Persona>\n1.\tVocê é kira, atendente da Encha, especialista em psicologia humana, atendimento ao cliente e especializada em oferecer e responder perguntas sobre mentoria/consultoria\n</Persona>  \n<Roteiro>\n1. Quando o cliente começar a conversar com você, peça para que ele detalhe mais o que ele quer ou o que ele precisa de ajuda, fale que ele pode enviar um aúdio porque assim pode ser mais fácil explicar.\n\n2. Após o tópico 1, explique que na mentoria nossos desenvolvedores vão pegar na sua mão e te acompanhar passo a passo nos seus projetos individuais e que serve tanto para fazer projetos do zero como para destravar alguma parte que você não conseguiu evoluir. Após informar isso, pergunte se faz sentido para o cliente.\n\n3. Se ele responder que não, chame a função 'leadFora', depois de chamar a função, pergunte o porque que não faz sentido para ele.\n\n\n4. Se ele responder que sim, informe que a mentoria tem o custo de R$450 e você também pode adquirir pacotes de 10h por R$3.750, e pergunte, se ele deseja agendar uma mentoria.\n\n5. Se ele não aceitar, chame a função 'leadFora', e depois de chamar, pergunte qual foi a objeção dele.\n\n6. Se ele responder que sim, peça para ele enviar um pix de 450 reais para confirmar pelo menos 1 hora de mentoria e enviar o comprovante, informe que os pacotes de horas só podem ser fechados com o mentor.\n-  Chave pix:https://www.google.com/webhp?authuser=3.\n\n7. Após ele enviar o pix, agradeça e peça para que ele aguarde o mentor entrar em contato para marcar a reunião.\n\n\n\n</Roteiro> \n<Exemplo de situações> \n1. Quais os custos que vou ter além da compra do curso? \nO único custo que você terá é com uma VPS que custa 54,00 e um domínio que você pode achar até de 7,00 por ano \n\n2. Eu nunca tive contato ou tenho pouco, preciso programar?\nNão, você não precisa ter conhecimento de programação, é um curso para iniciantes, onde você vai aprender do zero \n\n3. O curso é vitalício?\nSim, você tem acesso vitalício \n\n4. Já tem templates prontos?\nSim, temos prontos, onde você só faz o download \n\n5. Ensinam a fazer do zero? \nSim, você vai aprender a fazer tudo do zero \n\n\n6. O curso já está todo gravado? \nSim, hoje temos mais de 70 aulas gravadas, aulas com 5 a 20 minutos, aulas simples, diretas e didáticas \n\n7. As aulas são atualizadas?\nSão atualizadas conforme a necessidade e se fizer sentido para a criação do agente \n\n8. Vocês ensinam a vender? \nNão, neste curso não ensinamos a vender apenas criar um agente do zero,mas de forma clara e simples, a venda é tranquila, se você tiver um agente pronto para mostrar, ele mesmo já serve como exemplo, qualquer lugar que você sabe que tem muito demanda de mensagens é um bom cliente, como por exemplo, hoje na nossa carteira de clientes temos muitas imobiliárias é um bom público, se você mostrar uma agente funcionando, e resolvendo o problema deles, principalmente na qualificação de leads, é difícil eles não fecharem com você.\n\n9. Se eu tiver alguma dúvida ou dificuldade vocês têm suporte?\nSim, aqui você terá três níveis de suporte: \n nos comentários das aulas\n- no whatsapp\n- no meeting nos casos não resolvidos acima\n\n\n10. O curso tem garantia?\nSim, você tem até 07 dias para pedir o reembolso, caso o curso não atenda às suas expectativas \n\n\n11. Neste curso eu consigo aprender a criar agentes para fazer prospecção?\nSim, todo tipo de agente de IA, a lógica é a mesma para todos, o que vai mudar vai ser o prompt \n\n12. Neste curso eu consigo fazer disparo de mensagens?\nSim, você vai aprender a fazer isso no curso, mas não usamos a API oficial da META\n\n13. Quais ferramentas vocês usam?\nUsamos o N8N\n\n14. Dúvidas sobre análise de planilhas\n\n15. Consegue fazer scrapping e passar os dados para uma planilha?\nsim\n\n16. Dúvida sobre o domínio, o que é? E como usar? Ou qual melhor?\n\n\n  A Hostinger é só um servidor, vc pode usar qualquer outro servidor se não quiser usar a hostinger, mas sem servidor não tem como funcionar.\n  \n  Vc pode oferecer para o cliente dentro da sua estrutura  ou fazer um servidor para cada cliente. A vantagem de um servidor para cada cliente é que se você precisar paralisar o servidor para dar suporte isso não vai afetar outros clientes, o ponto negativo é que vc vai ter que cobrar o servidor de cada cliente mas isso você dilui na mensalidade.\n  \n  A vantagem de um usar um servidor para vários clientes é que você não precisa gastar com um servidor para cada cliente.  A desvantagem é que quando precisar parar um servidor para dar manutenção todos os outros clientes ficarão sem serviço.\n\n\n\n</ Exemplo de situações > \n<Observacoes>\n\n</ Observacoes >\n\n<Objetivo>\n\n\n</Objetivo>\n<Panorama>  \n\n\n</Panorama>  \n\n<Funções>  \nleadFora -> sempre que o cliente discordar de algum tópico da mentoria, você chamar está função (sem informar ao cliente que está ativando a função)\n\n\n\n</Funções>   \n\n\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        6460,
        3740
      ],
      "id": "bc247458-56b0-449c-9474-1824fd8645d5",
      "name": "Mentoria",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "humano -> Perguntar se o cliente ainda possui dúvidas, e se caso ele não possui, você deve chamar está função, enviar o seguinte link para ele https://cal.com/octavio-encha-zyyrlh/carlos pedindo para que ele marque na agenda o melhor dia e horário e depois informe que um consultor entrará em contato para dar continuidade a requisição dele.",
        "method": "POST",
        "url": "https://anzol.encha.com.br/webhook/7db88021-b43e-4451-a802-e301b72d4950",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "number",
              "valueProvider": "fieldValue",
              "value": "={{ $('Usuario').item.json.UserId }}"
            },
            {
              "name": "tag",
              "valueProvider": "fieldValue",
              "value": "humano"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        7240,
        4360
      ],
      "id": "25cdd1ac-62eb-441a-80c6-bbf79e1d8605",
      "name": "humano",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3a76619b-a8ba-4a0d-b7b8-34911f2cfb47",
              "leftValue": "={{ $json.body.conversation.messages[0].sender.name }}",
              "rightValue": "Enchat QR Code",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1240,
        860
      ],
      "id": "6edf6081-7521-48f9-8366-4cf71e0761de",
      "name": "If2"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Enchat",
          "mode": "list",
          "cachedResultName": "Enchat"
        },
        "where": {
          "values": [
            {
              "column": "UserId",
              "value": "={{ $('Normalização').item.json.Client.senderID }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2040,
        1220
      ],
      "id": "3bdb2d09-e01d-4e1c-be8f-ef36c7c6fea2",
      "name": "Postgres6",
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Enchat",
          "mode": "list",
          "cachedResultName": "Enchat"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "LastUpdated": "={{ $now }}",
            "IaLigada": false
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "UserId",
              "displayName": "UserId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PushName",
              "displayName": "PushName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "SessionId",
              "displayName": "SessionId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "UserType",
              "displayName": "UserType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "IaLigada",
              "displayName": "IaLigada",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Especialista",
              "displayName": "Especialista",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Nome Completo",
              "displayName": "Nome Completo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "EAluno",
              "displayName": "EAluno",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ConversationId",
              "displayName": "ConversationId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "LastUpdated",
              "displayName": "LastUpdated",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "FUP_5min",
              "displayName": "FUP_5min",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "FUP_10min",
              "displayName": "FUP_10min",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "GoogleDrive",
              "displayName": "GoogleDrive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Produtos",
              "displayName": "Produtos",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CreatedAt",
              "displayName": "CreatedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "time",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Insta",
              "displayName": "Insta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1900,
        640
      ],
      "id": "cb8fc588-7582-4d08-8c3a-c3ef78d9a4c2",
      "name": "Postgres8",
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c14d96ae-58e4-4b6b-8def-70110b429ae4",
                    "leftValue": "={{ $json.Id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notExists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Disparo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.IaLigada }}",
                    "rightValue": "={{ $('Normalização').item.json.Message.id }}",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    },
                    "id": "0e9a9ffe-4db7-4b42-a81d-65b66783aeca"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IA desligada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "82582cd3-3e10-4700-8305-0722ac70f1b8",
                    "leftValue": "={{ $json.LastUpdated }}",
                    "rightValue": "={{ $now.minus(15.'minute') }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "after"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Faz nada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1585bc24-0b58-4179-8919-0e9aabc0e35e",
                    "leftValue": "={{ $json.LastUpdated }}",
                    "rightValue": "={{ $now.minus(15.'minute') }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Religa IA"
            }
          ]
        },
        "options": {}
      },
      "id": "7c6514a3-308c-446f-aebf-e08294583175",
      "name": "Switch4",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2300,
        1220
      ]
    },
    {
      "parameters": {
        "toolDescription": "VendaRecupera -> Se o cliente perguntar sobre preço, plataforma que está localizado o curso, enfim, tudo que de finalidade ao sentor de venda, chame está função e depois envie uma mensagem coerente com a conversa sem informar que você chamou a função. Isso deve ser feito de maneira sigilosa.",
        "method": "POST",
        "url": "https://anzol.encha.com.br/webhook/7db88021-b43e-4451-a802-e301b72d4950",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "number",
              "valueProvider": "fieldValue",
              "value": "={{ $('Usuario').item.json.UserId }}"
            },
            {
              "name": "tag",
              "valueProvider": "fieldValue",
              "value": "recuperacao_venda"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        7040,
        3020
      ],
      "id": "7a7d422d-fcf6-4927-9dec-bb580cec0c54",
      "name": "VendaRecupera"
    },
    {
      "parameters": {
        "toolDescription": " Se o cliente perguntar sobre mentoria/consultoria você deve informar que fazemos consultoria on-line mas que antes precisamos entender o problema do cliente, e após essa mensagem, pergunte se ele gostaria de prosseguir com o processo de consultoria/mentoria.\n  - Se ele aceitar a consultoria, chame está função e após chamar a função, envie somente a seguinte mensagem 'Por favor, me conte mais sobre o seu problema ou em que posso te ajudar! 😊'.\n",
        "method": "POST",
        "url": "https://anzol.encha.com.br/webhook/7db88021-b43e-4451-a802-e301b72d4950",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "number",
              "valueProvider": "fieldValue",
              "value": "={{ $('Usuario').item.json.UserId }}"
            },
            {
              "name": "tag",
              "valueProvider": "fieldValue",
              "value": "mentoria_projeto"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        8160,
        4360
      ],
      "id": "1711dfcb-2c18-45d7-b188-bb0c1142b6c0",
      "name": "Mentoria2"
    },
    {
      "parameters": {
        "toolDescription": "Se o cliente abordar o assunto de emprego, ou seja, deseja adquirir um emprego na Encha, você deve chamar está função e informar que o gestor entrará em contato para dar continuidade ao atendimento e já peça para que ele envie o seu currículo.",
        "method": "POST",
        "url": "https://anzol.encha.com.br/webhook/7db88021-b43e-4451-a802-e301b72d4950",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "number",
              "valueProvider": "fieldValue",
              "value": "={{ $('Usuario').item.json.UserId }}"
            },
            {
              "name": "tag",
              "valueProvider": "fieldValue",
              "value": "curriculo"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        6900,
        3020
      ],
      "id": "c486a690-0edb-450e-b26c-1bb180d14c4d",
      "name": "emprego"
    },
    {
      "parameters": {
        "toolDescription": "sempre que o cliente discordar de algum tópico da mentoria, você chamar está função (sem informar ao cliente que está ativando a função)",
        "method": "POST",
        "url": "https://anzol.encha.com.br/webhook/7db88021-b43e-4451-a802-e301b72d4950",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "number",
              "valueProvider": "fieldValue",
              "value": "={{ $('Usuario').item.json.UserId }}"
            },
            {
              "name": "tag",
              "valueProvider": "fieldValue",
              "value": "humano"
            },
            {
              "name": "tag a remover",
              "valueProvider": "fieldValue",
              "value": "mentoria_projeto"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        6780,
        4380
      ],
      "id": "e0327ce8-9c34-4913-8976-bfebabccd19e",
      "name": "leadFora"
    },
    {
      "parameters": {
        "toolDescription": "Se durante a conversa o cliente informar que depois irá entrar em contato, ou que está ocupado no momento, enfim... Algo que de a entender que a conversa será pausada por parte do cliente mas que ele entrará em contato depois, você deve chamar está função e depois de chamar a função, mande a seguinte mensagem 'Ok, fico no seu aguardo. Até mais!😊'",
        "url": "https://www.google.com/webhp?authuser=3"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        7180,
        3020
      ],
      "id": "ef69fa5e-96f7-4027-9ced-df0e5e970c46",
      "name": "Cancela_FUP"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Comprador",
          "mode": "list",
          "cachedResultName": "Comprador"
        },
        "where": {
          "values": [
            {
              "column": "UserId",
              "value": "={{ $('Normalização').item.json.Kira.ClientConversatrion }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        4900,
        800
      ],
      "id": "838084a7-8ba7-4dac-b8fc-ce5c0e0baa38",
      "name": "Postgres9",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a52bd693-1541-4e2a-971b-bbb574621f57",
              "leftValue": "={{ $json.Id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5160,
        800
      ],
      "id": "68f7b45d-c717-4676-a428-a728d7167b13",
      "name": "If4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://woot.hausenchat.in/api/v1/accounts/1/conversations/{{ $('Normalização').item.json.Client.conversationId }}/labels",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "mFosprHN8L3eA5La8efxvqcg"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"labels\": [\n    \"{{ $json.arrayOrigin }}\"\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5620,
        320
      ],
      "id": "69d660f7-bcf5-44fd-b6c2-c48b4ed9f7b5",
      "name": "Adiciona Label"
    },
    {
      "parameters": {
        "jsCode": "let arrayOrigin = $input.first().json.Produto;\n\n// Transforma tudo em lowercase para facilitar a comparação\narrayOrigin = arrayOrigin.map(item => item.toLocaleLowerCase());\n\nlet resultado = [];\n\n// Verifica se contém 'ia visual'\nif (arrayOrigin.some(item => item.includes('visual'))) {\n  resultado.push('visual');\n}\n\n// Verifica se contém 'exército de ia' (com ou sem acento)\nif (arrayOrigin.some(item => item.includes('exercito de ia´s') || item.includes('exercito de ia'))) {\n  resultado.push('exercito');\n}\n\n// Sempre adiciona '1_ia_ligada' no início\nresultado.unshift('1_ia_ligada');\n\nconst conversationId= $('Normalização').first().json.Client.conversationId;\n\nreturn { arrayOrigin: resultado , conversationId, arrayanterior: arrayOrigin };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5400,
        320
      ],
      "id": "6d0ad302-259c-4cae-8c1c-9ec6a84a6a8c",
      "name": "Adicional_Label"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Comprador",
          "mode": "list",
          "cachedResultName": "Comprador"
        },
        "where": {
          "values": [
            {
              "column": "UserId",
              "value": "={{ $('Normalização').item.json.Kira.ClientConversatrion }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        5000,
        1100
      ],
      "id": "46a04026-4a74-442c-9a6f-e1a45e0a038d",
      "name": "Postgres10",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a52bd693-1541-4e2a-971b-bbb574621f57",
              "leftValue": "={{ $json.Id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5320,
        1100
      ],
      "id": "3e0f4710-a18e-4998-845d-de9fcf916837",
      "name": "If5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://woot.hausenchat.in/api/v1/accounts/1/conversations/{{ $json.conversationId }}/labels",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "mFosprHN8L3eA5La8efxvqcg"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"labels\": [\n    \"{{ $json.arrayOrigin }}\"\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5960,
        980
      ],
      "id": "8aefdada-4349-480e-9ba9-9e3f889c1afc",
      "name": "Adiciona Label1"
    },
    {
      "parameters": {
        "jsCode": "let arrayOrigin = $input.first().json.Produto;\n\n// Transforma tudo em lowercase para facilitar a comparação\narrayOrigin = arrayOrigin.map(item => item.toLocaleLowerCase());\n\nlet resultado = [];\n\n// Verifica se contém 'ia visual'\nif (arrayOrigin.some(item => item.includes('visual'))) {\n  resultado.push('visual');\n}\n\n// Verifica se contém 'exército de ia' (com ou sem acento)\nif (arrayOrigin.some(item => item.includes('exercito de ia´s') || item.includes('exercito de ia'))) {\n  resultado.push('exercito');\n}\n\n// Sempre adiciona '1_ia_ligada' no início\nresultado.unshift('1_ia_ligada');\n\nconst conversationId= $('Normalização').first().json.Client.conversationId;\n\nreturn { arrayOrigin: resultado , conversationId, arrayanterior: arrayOrigin };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5760,
        960
      ],
      "id": "7ef40f9f-c044-4bbc-a544-567f792a11af",
      "name": "Adicional_Label1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Enchat",
          "mode": "list",
          "cachedResultName": "Enchat"
        },
        "where": {
          "values": [
            {
              "column": "UserId",
              "value": "={{ $('Normalização').item.json.Kira.ClientConversatrion }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        5620,
        1280
      ],
      "id": "f3159eeb-8c74-4c06-9680-db2ef42b84f5",
      "name": "Postgres11",
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a52bd693-1541-4e2a-971b-bbb574621f57",
              "leftValue": "={{ $json.Id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2800,
        380
      ],
      "id": "1b50b073-0503-46a3-904c-0a7f94a75ca6",
      "name": "If6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://woot.hausenchat.in/api/v1/accounts/1/conversations/{{ $('Normalização').item.json.Client.conversationId }}/labels",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "mFosprHN8L3eA5La8efxvqcg"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"labels\": [\n    \"{{ $json.arrayOrigin }}\"\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3300,
        160
      ],
      "id": "d688b3d2-b4f5-4fdc-93aa-280eae130fac",
      "name": "Adiciona Label2"
    },
    {
      "parameters": {
        "jsCode": "let arrayOrigin = $input.first().json.Produto;\n\n// Transforma tudo em lowercase para facilitar a comparação\narrayOrigin = arrayOrigin.map(item => item.toLocaleLowerCase());\n\nlet resultado = [];\n\n// Verifica se contém 'ia visual'\nif (arrayOrigin.some(item => item.includes('visual'))) {\n  resultado.push('visual');\n}\n\n// Verifica se contém 'exército de ia' (com ou sem acento)\nif (arrayOrigin.some(item => item.includes('exercito de ia´s') || item.includes('exercito de ia'))) {\n  resultado.push('exercito');\n}\n\n// Sempre adiciona '1_ia_ligada' no início\nresultado.unshift('1_ia_ligada');\n\nconst conversationId= $('Normalização').first().json.Client.conversationId;\n\nreturn { arrayOrigin: resultado , conversationId, arrayanterior: arrayOrigin };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3060,
        200
      ],
      "id": "aef0cf48-9c50-4691-95f4-0723b2ae6c28",
      "name": "Adicional_Label2"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Comprador",
          "mode": "list",
          "cachedResultName": "Comprador"
        },
        "where": {
          "values": [
            {
              "column": "UserId",
              "value": "={{ $('Normalização').item.json.Kira.ClientConversatrion }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2560,
        400
      ],
      "id": "83f713f2-f15f-469b-a653-c70389dc5b10",
      "name": "Postgres13",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Enchat",
          "mode": "list",
          "cachedResultName": "Enchat"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "UserId": "5561981386671",
            "Produtos Comprados": "={{ $('Adicional_Label1').item.json.arrayanterior }}"
          },
          "matchingColumns": [
            "UserId"
          ],
          "schema": [
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "UserId",
              "displayName": "UserId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "PushName",
              "displayName": "PushName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "SessionId",
              "displayName": "SessionId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "UserType",
              "displayName": "UserType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "IaLigada",
              "displayName": "IaLigada",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Especialista",
              "displayName": "Especialista",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Nome Completo",
              "displayName": "Nome Completo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "EAluno",
              "displayName": "EAluno",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ConversationId",
              "displayName": "ConversationId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "LastUpdated",
              "displayName": "LastUpdated",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "GoogleDrive",
              "displayName": "GoogleDrive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CreatedAt",
              "displayName": "CreatedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "time",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Insta",
              "displayName": "Insta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Produtos Comprados",
              "displayName": "Produtos Comprados",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true
            },
            {
              "id": "Produtos Reembolsados",
              "displayName": "Produtos Reembolsados",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "FUP de Conversa",
              "displayName": "FUP de Conversa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        6140,
        980
      ],
      "id": "058208b6-7f41-437f-8472-4820e8980df6",
      "name": "Postgres5",
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://woot.hausenchat.in/api/v1/accounts/{{ $('Normalização').item.json.Kira.accountID }}/conversations/{{ $('Normalização').item.json.Client.conversationId }}/assignments",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('Normalização').item.json.Kira.kiraApiKey }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "=assignee_id",
              "value": "={{ JSON.stringify($json.assignee_id).replace(/\\\\n/g, '\\n').replace(/^\"|\"$/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c5d395f9-df56-401e-87ec-9dd396f6be9f",
      "name": "Desliga Kira1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6120,
        320
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "0tSqndIObllW1kBs",
          "name": "Kira_woot"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa3e4f6c-7469-4edb-ba75-46e15903ab86",
              "name": "assignee_id",
              "value": "0",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6bce79f6-48f1-46d4-85f7-be19da2aa1fb",
      "name": "comando para desligar IA1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5900,
        320
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://woot.hausenchat.in/api/v1/accounts/1/conversations/{{ $('Adicional_Label1').item.json.conversationId }}/assignments",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "=mFosprHN8L3eA5La8efxvqcg"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "=assignee_id",
              "value": "={{ JSON.stringify($json.assignee_id).replace(/\\\\n/g, '\\n').replace(/^\"|\"$/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f0bf3e35-a83f-41dd-9847-42a3e443e8af",
      "name": "Desliga Kira3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6820,
        940
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "0tSqndIObllW1kBs",
          "name": "Kira_woot"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa3e4f6c-7469-4edb-ba75-46e15903ab86",
              "name": "assignee_id",
              "value": "0",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3be54984-ad47-47b0-8637-f2529889f363",
      "name": "comando para desligar IA4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6600,
        940
      ]
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Comprador",
          "mode": "list",
          "cachedResultName": "Comprador"
        },
        "deleteCommand": "delete",
        "where": {
          "values": [
            {
              "column": "UserId",
              "value": "5561981386671"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        960,
        3620
      ],
      "id": "9c172596-ddd1-4542-92a6-44a489dfde2c",
      "name": "Postgres7",
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Comprador",
          "mode": "list",
          "cachedResultName": "Comprador"
        },
        "where": {
          "values": [
            {
              "column": "UserId",
              "value": "={{ $('Normalização').item.json.Kira.ClientConversatrion }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1500,
        1200
      ],
      "id": "d73439e1-fba9-4b6b-8b48-7f3ecb867ae2",
      "name": "Postgres12",
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f02478c0-0b88-47ed-b010-67a5acf06bb0",
              "leftValue": "={{ $json.Id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1660,
        1200
      ],
      "id": "7a623b3a-b31e-4884-af69-27d86aa09050",
      "name": "If1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://edvedder.encha.top/message/sendText/extra_number",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "383A89FA4C5A-4531-B0BB-C4239EB64F2A"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"5561981386671\",\n  \"type\": \"textMessage\",\n  \"text\": \"teste\"\n}",
        "options": {}
      },
      "id": "e3731c70-69e2-466b-b8ba-b73afe3d03b0",
      "name": "Enviar mensagem",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1220,
        3480
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa3e4f6c-7469-4edb-ba75-46e15903ab86",
              "name": "assignee_id",
              "value": "0",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d08e6191-a24c-4748-b2d9-9d1d3da3a5ce",
      "name": "comando para desligar IA3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3540,
        140
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normalização').item.json.Kira.kirawootUrl }}api/v1/accounts/{{ $('Normalização').item.json.Kira.accountID }}/conversations/{{ $('Normalização').item.json.Client.conversationId }}/assignments",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $('Normalização').item.json.Kira.kiraApiKey }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "=assignee_id",
              "value": "={{ JSON.stringify($json.assignee_id).replace(/\\\\n/g, '\\n').replace(/^\"|\"$/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "91fadff4-e458-4f1d-9236-5b30d77d3a66",
      "name": "Desliga Kira4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3840,
        140
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "0tSqndIObllW1kBs",
          "name": "Kira_woot"
        }
      }
    },
    {
      "parameters": {
        "action": "generate"
      },
      "id": "003d88ad-0077-4314-92d9-1c56bf104466",
      "name": "GeraUUID2",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        4080,
        120
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Enchat",
          "mode": "list",
          "cachedResultName": "Enchat"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "IaLigada": false,
            "UserId": "={{ $('Normalização').item.json.Client.senderID }}",
            "PushName": "=",
            "ConversationId": "={{ $('Normalização').item.json.Client.conversationId }}",
            "SessionId": "={{ $json.data }}",
            "Produtos Comprados": "={{ $('If6').item.json.Produto  || null}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "UserId",
              "displayName": "UserId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "PushName",
              "displayName": "PushName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SessionId",
              "displayName": "SessionId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "UserType",
              "displayName": "UserType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "IaLigada",
              "displayName": "IaLigada",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "Especialista",
              "displayName": "Especialista",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Nome Completo",
              "displayName": "Nome Completo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "EAluno",
              "displayName": "EAluno",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ConversationId",
              "displayName": "ConversationId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "LastUpdated",
              "displayName": "LastUpdated",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "GoogleDrive",
              "displayName": "GoogleDrive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CreatedAt",
              "displayName": "CreatedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "time",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Insta",
              "displayName": "Insta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Produtos Comprados",
              "displayName": "Produtos Comprados",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Produtos Reembolsados",
              "displayName": "Produtos Reembolsados",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "FUP de Conversa",
              "displayName": "FUP de Conversa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4320,
        120
      ],
      "id": "e9d4e1d0-c383-4a9e-b7e0-0b3110e8bf7b",
      "name": "Postgres14",
      "credentials": {
        "postgres": {
          "id": "Zrn47e23rpWIZ1pp",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "anzol.encha.com.br",
            "user-agent": "rest-client/2.1.0 (linux-musl x86_64) ruby/3.3.3p89",
            "content-length": "2434",
            "accept": "application/json",
            "accept-encoding": "gzip;q=1.0,deflate;q=0.6,identity;q=0.3",
            "content-type": "application/json",
            "x-forwarded-for": "147.79.106.31",
            "x-forwarded-host": "anzol.encha.com.br",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "9fd4cfb41f9b",
            "x-real-ip": "147.79.106.31"
          },
          "params": {},
          "query": {},
          "body": {
            "account": {
              "id": 1,
              "name": "Encha"
            },
            "additional_attributes": {},
            "content_attributes": {},
            "content_type": "text",
            "content": "OI",
            "conversation": {
              "additional_attributes": {},
              "can_reply": true,
              "channel": "Channel::Api",
              "contact_inbox": {
                "id": 1049,
                "contact_id": 507,
                "inbox_id": 11,
                "source_id": "63ef8a0f-4f62-4f19-9a4f-f9172d66fad5",
                "created_at": "2025-04-23T18:31:37.105Z",
                "updated_at": "2025-04-23T18:31:37.105Z",
                "hmac_verified": false,
                "pubsub_token": "jJ9GCL5BPjLPYMmThcw2drSV"
              },
              "id": 554,
              "inbox_id": 11,
              "messages": [
                {
                  "id": 8840,
                  "content": "OI",
                  "account_id": 1,
                  "inbox_id": 11,
                  "conversation_id": 554,
                  "message_type": 0,
                  "created_at": 1745433097,
                  "updated_at": "2025-04-23T18:31:37.255Z",
                  "private": false,
                  "status": "sent",
                  "source_id": "WAID:3F1DF6D3203DD663A55B",
                  "content_type": "text",
                  "content_attributes": {},
                  "sender_type": "Contact",
                  "sender_id": 507,
                  "external_source_ids": {},
                  "additional_attributes": {},
                  "processed_message_content": "OI",
                  "sentiment": {},
                  "conversation": {
                    "assignee_id": 1,
                    "unread_count": 1,
                    "last_activity_at": 1745433097,
                    "contact_inbox": {
                      "source_id": "63ef8a0f-4f62-4f19-9a4f-f9172d66fad5"
                    }
                  },
                  "sender": {
                    "additional_attributes": {},
                    "custom_attributes": {},
                    "email": null,
                    "id": 507,
                    "identifier": "556181386671@s.whatsapp.net",
                    "name": "Octavio Leite Neto",
                    "phone_number": "+556181386671",
                    "thumbnail": "",
                    "type": "contact"
                  }
                }
              ],
              "labels": [
                "1_ia_ligada",
                "2_lead_fora"
              ],
              "meta": {
                "sender": {
                  "additional_attributes": {},
                  "custom_attributes": {},
                  "email": null,
                  "id": 507,
                  "identifier": "556181386671@s.whatsapp.net",
                  "name": "Octavio Leite Neto",
                  "phone_number": "+556181386671",
                  "thumbnail": "",
                  "type": "contact"
                },
                "assignee": {
                  "id": 1,
                  "name": "Kira",
                  "available_name": "Kira Encha",
                  "avatar_url": "",
                  "type": "user",
                  "availability_status": null,
                  "thumbnail": ""
                },
                "team": null,
                "hmac_verified": false
              },
              "status": "open",
              "custom_attributes": {},
              "snoozed_until": null,
              "unread_count": 1,
              "first_reply_created_at": null,
              "priority": null,
              "waiting_since": 1745433097,
              "agent_last_seen_at": 0,
              "contact_last_seen_at": 0,
              "last_activity_at": 1745433097,
              "timestamp": 1745433097,
              "created_at": 1745433097
            },
            "created_at": "2025-04-23T18:31:37.255Z",
            "id": 8840,
            "inbox": {
              "id": 11,
              "name": "ChanelTest"
            },
            "message_type": "incoming",
            "private": false,
            "sender": {
              "account": {
                "id": 1,
                "name": "Encha"
              },
              "additional_attributes": {},
              "avatar": "",
              "custom_attributes": {},
              "email": null,
              "id": 507,
              "identifier": "556181386671@s.whatsapp.net",
              "name": "Octavio Leite Neto",
              "phone_number": "+556181386671",
              "thumbnail": ""
            },
            "source_id": "WAID:3F1DF6D3203DD663A55B",
            "event": "message_created"
          },
          "webhookUrl": "https://anzol.encha.com.br/webhook/778df45b-1d4e-429e-9345-a665a1f48c28",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Normalização": {
      "main": [
        [
          {
            "node": "Labels",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory Manager",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Postgres9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GeraUUID": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Mensagens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagens": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ConvertePDF": {
      "main": [
        [
          {
            "node": "NoOp.1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp.1": {
      "main": [
        [
          {
            "node": "Merge-2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MidiaExiste?": {
      "main": [
        [
          {
            "node": "GetMidia",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp.7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Padronização": {
      "main": [
        [
          {
            "node": "Merge-2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "NoOp.7": {
      "main": [
        [
          {
            "node": "Captura Mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMidia": {
      "main": [
        [
          {
            "node": "TipoMidia",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "InputAI": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp.": {
      "main": [
        [
          {
            "node": "Merge-2",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "TipoMidia": {
      "main": [
        [
          {
            "node": "ConvertePDF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Transcrição",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OpenAI6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcrição": {
      "main": [
        [
          {
            "node": "Padronização",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "comando para desligar IA": {
      "main": [
        [
          {
            "node": "Desliga Kira",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "comando para religar IA": {
      "main": [
        [
          {
            "node": "Religa Kira",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Religa Kira": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normaliza memória": {
      "main": [
        [
          {
            "node": "Chat Memory Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Usuario": {
      "main": [
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge-2": {
      "main": [
        [
          {
            "node": "InputAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing5": {
      "main": [
        [
          {
            "node": "MidiaExiste?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory Manager2": {
      "main": [
        []
      ]
    },
    "Redis Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory Manager2",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Chat Memory Manager3",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI6": {
      "main": [
        [
          {
            "node": "NoOp.",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Captura Mensagem": {
      "main": [
        [
          {
            "node": "Merge-2",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Postgres13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "comando para desligar IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GeraUUID1": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "comando para desligar IA2": {
      "main": [
        [
          {
            "node": "Desliga Kira2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "antigo": {
      "main": [
        [],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LoopItems2": {
      "main": [
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "sendChatWoot5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Digitando2": {
      "main": [
        [
          {
            "node": "NoOp.9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp.9": {
      "main": [
        [
          {
            "node": "LoopItems2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sendChatWoot5": {
      "main": [
        [
          {
            "node": "Digitando2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "antigo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "comando para desligar IA2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres3": {
      "main": [
        [
          {
            "node": "Usuario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "IA Generalista",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "IA Suporte Alunos",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Recupera Vendas",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "IA Generalista",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "IA Suporte Alunos",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Recupera Vendas",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Mentoria",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory2": {
      "ai_memory": [
        [
          {
            "node": "IA Generalista",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "IA Suporte Alunos",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Recupera Vendas",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Mentoria",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "IA Generalista",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IA Suporte Alunos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IA Suporte Alunos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Recupera Vendas",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mentoria",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Labels": {
      "main": [
        [
          {
            "node": "timmer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "timmer": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IA Generalista": {
      "main": [
        [
          {
            "node": "LoopItems2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recupera Vendas": {
      "main": [
        [
          {
            "node": "LoopItems2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IA Suporte Alunos": {
      "main": [
        [
          {
            "node": "LoopItems2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mentoria": {
      "main": [
        [
          {
            "node": "LoopItems2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "humano": {
      "ai_tool": [
        [
          {
            "node": "Mentoria",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Normalização",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres6": {
      "main": [
        [
          {
            "node": "Switch4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres8": {
      "main": [
        [
          {
            "node": "comando para desligar IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch4": {
      "main": [
        [],
        [
          {
            "node": "Normaliza memória",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Normaliza memória",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "comando para religar IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "VendaRecupera": {
      "ai_tool": [
        [
          {
            "node": "IA Generalista",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Mentoria2": {
      "ai_tool": [
        [
          {
            "node": "IA Generalista",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "IA Suporte Alunos",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Recupera Vendas",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "emprego": {
      "ai_tool": [
        [
          {
            "node": "IA Generalista",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "leadFora": {
      "ai_tool": [
        [
          {
            "node": "Mentoria",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Cancela_FUP": {
      "ai_tool": [
        [
          {
            "node": "IA Generalista",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres9": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Adicional_Label",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "GeraUUID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adicional_Label": {
      "main": [
        [
          {
            "node": "Adiciona Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adiciona Label": {
      "main": [
        [
          {
            "node": "comando para desligar IA1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Adicional_Label1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adicional_Label1": {
      "main": [
        [
          {
            "node": "Adiciona Label1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres10": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adiciona Label1": {
      "main": [
        [
          {
            "node": "Postgres5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres11": {
      "main": [
        [
          {
            "node": "Usuario",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Adicional_Label2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "GeraUUID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adicional_Label2": {
      "main": [
        [
          {
            "node": "Adiciona Label2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres13": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adiciona Label2": {
      "main": [
        [
          {
            "node": "comando para desligar IA3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "comando para desligar IA1": {
      "main": [
        [
          {
            "node": "Desliga Kira1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "comando para desligar IA4": {
      "main": [
        [
          {
            "node": "Desliga Kira3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres5": {
      "main": [
        [
          {
            "node": "comando para desligar IA4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres12": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [],
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "comando para desligar IA3": {
      "main": [
        [
          {
            "node": "Desliga Kira4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GeraUUID2": {
      "main": [
        [
          {
            "node": "Postgres14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Desliga Kira4": {
      "main": [
        [
          {
            "node": "GeraUUID2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "389a0211-853d-4604-8104-1c32f6107875",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "82d10096f623d79405f549f7626da8cd98c1f9933ab495aefea0e4e926f8aa5b"
  },
  "id": "OrNKfrz1dsE1tV4v",
  "tags": [
    {
      "createdAt": "2025-03-26T14:27:01.882Z",
      "updatedAt": "2025-03-26T14:27:01.882Z",
      "id": "YRLNnId7mrlLA0lq",
      "name": "chatwoot"
    }
  ]
}